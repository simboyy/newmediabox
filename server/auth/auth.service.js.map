{"version":3,"sources":["auth/auth.service.js"],"names":["isAuthenticated","attachUserInfo","hasRole","signToken","setTokenCookie","validateJwt","secret","secrets","session","jwtUserInfo","credentialsRequired","use","req","res","next","query","hasOwnProperty","headers","authorization","access_token","findById","user","_id","exec","then","status","end","catch","err","roleRequired","Error","meetsRequirements","userRoles","indexOf","role","send","id","sign","expiresIn","token","cookie","redirect"],"mappings":"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","file":"auth.service.js","sourcesContent":["'use strict';\n\n// import passport from 'passport';\nimport config from '../config/environment';\nimport jwt from 'jsonwebtoken';\nimport expressJwt from 'express-jwt';\nimport compose from 'composable-middleware';\nimport User from '../api/user/user.model';\n\nvar validateJwt = expressJwt({\n  secret: config.secrets.session\n});\n\nvar jwtUserInfo = expressJwt({\n  secret: config.secrets.session,\n  credentialsRequired: false\n});\n\n/**\n * Attaches the user object to the request if authenticated\n * Otherwise returns 403\n */\nexport function isAuthenticated() {\n  return compose()\n    // Validate jwt\n    .use(function(req, res, next) {\n      // allow access_token to be passed through query parameter as well\n      if (req.query && req.query.hasOwnProperty('access_token')) {\n        req.headers.authorization = 'Bearer ' + req.query.access_token;\n      }\n      validateJwt(req, res, next);\n    })\n    // Attach user to request\n    .use(function(req, res, next) {\n      User.findById(req.user._id).exec()\n        .then(user => {\n          if (!user) {\n            return res.status(401).end();\n          }\n          req.user = user;\n          next();\n        })\n        .catch(err => next(err));\n    });\n}\n\n/**\n * Attaches the user object to the request if authenticated\n * Otherwise blank\n */\nexport function attachUserInfo() {\n  return compose()\n    // Validate jwt providing access to unregistered users\n    .use(function(req, res, next) {\n      jwtUserInfo(req, res, next)\n    })\n    .use(function(req, res, next) {\n      if(req.user){\n        User.findById(req.user._id).exec()\n        .then(user => {\n          if (!user) {\n            return res.status(401).end();\n          }\n          req.user = user;\n          next();\n        })\n        .catch(err => next(err));\n      }else{\n        next();\n      }\n    });\n}\n\n/**\n * Checks if the user role meets the minimum requirements of the route\n */\nexport function hasRole(roleRequired) {\n  if (!roleRequired) {\n    throw new Error('Required role needs to be set');\n  }\n\n  return compose()\n    .use(isAuthenticated())\n    .use(function meetsRequirements(req, res, next) {\n      if (config.userRoles.indexOf(req.user.role) >=\n          config.userRoles.indexOf(roleRequired)) {\n        next();\n      } else {\n        res.status(403).send('Forbidden');\n      }\n    });\n}\n\n/**\n * Returns a jwt token signed by the app secret\n */\nexport function signToken(id, role) {\n  return jwt.sign({ _id: id, role: role }, config.secrets.session, {\n    expiresIn: 60 * 60 * 5\n  });\n}\n\n/**\n * Set token cookie directly for oAuth strategies\n */\nexport function setTokenCookie(req, res) {\n  if (!req.user) {\n    return res.status(404).send('It looks like you aren\\'t logged in, please try again.');\n  }\n  var token = signToken(req.user._id, req.user.role);\n  res.cookie('token', token);\n  res.redirect('/');\n}\n"]}