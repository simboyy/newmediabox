{"version":3,"sources":["api/media/index.js"],"names":["controller","auth","multiparty","require","multipartyMiddleware","router","use","uploadDir","get","isAuthenticated","myMedia","pubMedia","post","create","index","show","put","update","mediaUpdate","patch","delete","destroy","module","exports"],"mappings":"AAAA;;AAEA;;AACA;;IAAYA,U;;AACZ;;IAAYC,I;;;;AAEZ,IAAIC,aAAaC,QAAQ,oBAAR,CAAjB;AACA,IAAIC,uBAAuBF,YAA3B;AACA,IAAIG,SAAS,qBAAb;;AAEAA,OAAOC,GAAP,CAAWJ,WAAW,EAAEK,WAAW,kBAAb,EAAX,CAAX;;AAGAF,OAAOG,GAAP,CAAW,KAAX,EAAkBP,KAAKQ,eAAL,EAAlB,EAA2CT,WAAWU,OAAtD;AACAL,OAAOG,GAAP,CAAW,MAAX,EAAmBP,KAAKQ,eAAL,EAAnB,EAA4CT,WAAWW,QAAvD;AACAN,OAAOO,IAAP,CAAY,GAAZ,EAAiBX,KAAKQ,eAAL,EAAjB,EAAyCL,oBAAzC,EAA+DJ,WAAWa,MAA1E;AACAR,OAAOG,GAAP,CAAW,GAAX,EAAgBP,KAAKQ,eAAL,EAAhB,EAAwCT,WAAWc,KAAnD;AACAT,OAAOG,GAAP,CAAW,MAAX,EAAmBP,KAAKQ,eAAL,EAAnB,EAA2CT,WAAWe,IAAtD;AACAV,OAAOW,GAAP,CAAW,MAAX,EAAmBf,KAAKQ,eAAL,EAAnB,EAA2CT,WAAWiB,MAAtD;AACAZ,OAAOW,GAAP,CAAW,SAAX,EAAsBf,KAAKQ,eAAL,EAAtB,EAA8CT,WAAWkB,WAAzD;AACAb,OAAOc,KAAP,CAAa,MAAb,EAAqBlB,KAAKQ,eAAL,EAArB,EAA6CT,WAAWiB,MAAxD;AACAZ,OAAOe,MAAP,CAAc,MAAd,EAAsBnB,KAAKQ,eAAL,EAAtB,EAA8CT,WAAWqB,OAAzD;;AAEAC,OAAOC,OAAP,GAAiBlB,MAAjB","file":"index.js","sourcesContent":["'use strict';\n\nimport {Router} from 'express';\nimport * as controller from './media.controller';\nimport * as auth from '../../auth/auth.service';\n\nvar multiparty = require('connect-multiparty');\nvar multipartyMiddleware = multiparty();\nvar router = new Router();\n\nrouter.use(multiparty({ uploadDir: './client/uploads' }));\n\n\nrouter.get('/my', auth.isAuthenticated() , controller.myMedia);\nrouter.get('/pub', auth.isAuthenticated() , controller.pubMedia);\nrouter.post('/', auth.isAuthenticated(), multipartyMiddleware, controller.create);\nrouter.get('/', auth.isAuthenticated(), controller.index);\nrouter.get('/:id', auth.isAuthenticated(), controller.show);\nrouter.put('/:id', auth.isAuthenticated(), controller.update);\nrouter.put('/my/:id', auth.isAuthenticated(), controller.mediaUpdate);\nrouter.patch('/:id', auth.isAuthenticated(), controller.update);\nrouter.delete('/:id', auth.isAuthenticated(), controller.destroy);\n\nmodule.exports = router;\n"]}