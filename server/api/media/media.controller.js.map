{"version":3,"sources":["api/media/media.controller.js"],"names":["index","myMedia","pubMedia","show","create","update","mediaUpdate","destroy","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","merge","save","then","removeEntity","remove","fs","require","unlink","path","err","end","handleEntityNotFound","handleError","send","req","find","user","email","exec","catch","findById","params","id","files","file","uid","replace","console","log","body","_id","$push","pub","findOne"],"mappings":"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","file":"media.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/media              ->  index\n * POST    /api/media              ->  create\n * GET     /api/media/:id          ->  show\n * PUT     /api/media/:id          ->  update\n * DELETE  /api/media/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Media from './media.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n      .then(() => {\n        const fs = require('fs');\n        fs.unlink('client/'+entity.path, (err) => {\n          if (err) {}\n        });\n        res.status(204).end();\n      });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Medias\nexport function index(req, res) {\n  return Media.find({'uid':req.user.email}).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a list of Medias\nexport function myMedia(req, res) {\n  return Media.find({'uid':req.user.email}).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a list of Medias\nexport function pubMedia(req, res) {\n   return Media.find({'pub':req.user.email}).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Media from the DB\nexport function show(req, res) {\n  return Media.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Media in the DB\nexport function create(req, res) {\n  req.files.file.uid = req.user.email;\n  req.files.file.path = req.files.file.path.replace(\"client\\\\\", \"\").replace('client/','').replace('client//','');\n  return Media.create(req.files.file)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Media in the DB\nexport function update(req, res) {\n\n  console.log(req.body);\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Media.update({'path':req.params.id},{ $push: { pub: req.body.pub } }).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n\n// Updates an existing Media in the DB with publishers\nexport function mediaUpdate(req, res) {\n  console.log(req.body);\n\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Media.findOne({'path':req.params.id}).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Media from the DB\nexport function destroy(req, res) {\n  return Media.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}