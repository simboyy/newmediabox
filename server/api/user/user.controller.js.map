{"version":3,"sources":["api/user/user.controller.js"],"names":["reset","forgot","index","create","show","update","destroy","changePassword","me","authCallback","mailer","validationError","res","statusCode","err","status","json","respondWithResult","entity","saveUpdates","updates","updated","merge","save","then","handleEntityNotFound","end","handleError","send","req","next","waterfall","done","findOne","resetPasswordToken","params","token","resetPasswordExpires","$gt","Date","now","user","password","body","undefined","to","email","mailOptions","resetPassword","catch","randomBytes","buf","toString","host","headers","forgotPassword","find","exec","users","console","log","newUser","provider","role","signUpAdvertiser","signUpPublisher","sign","_id","secrets","session","expiresIn","userId","id","findById","profile","findByIdAndRemove","oldPass","String","oldPassword","newPass","newPassword","authenticate","redirect"],"mappings":"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","file":"user.controller.js","sourcesContent":["'use strict';\n\nimport User from './user.model';\nimport config from '../../config/environment';\nimport jwt from 'jsonwebtoken';\nimport async from 'async';\nimport crypto from 'crypto';\nimport _ from 'lodash';\nimport * as mailer from '../sendmail/send'\n\nfunction validationError(res, statusCode) {\n  statusCode = statusCode || 422;\n  return function(err) {\n    return res.status(statusCode).json(err);\n  }\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  }\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  }\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    return res.status(statusCode).send(err);\n  };\n}\n/**\n * Get list of users\n * restriction: 'admin'\n */\n\n// Reset password route\nexport function reset(req, res, next) {\n  async.waterfall([\n    function(done) {\n      User.findOne({ resetPasswordToken: req.params.token, resetPasswordExpires: { $gt: Date.now() } }, function(err, user) {\n        if (!user) {\n          return res.status(422).json({'message': 'Password reset email is invalid or has expired.'});\n        }\n\n        user.password = req.body.password;\n        user.resetPasswordToken = undefined;\n        user.resetPasswordExpires = undefined;\n        req.body.to = user.email\n        user.save()\n          .then(function() {\n            mailer.send(config.mailOptions.resetPassword(req.body))\n            return res.status(200).json({'message': 'Success! Your password has been changed.'});\n          })\n          .catch(validationError(res));\n      });\n    }\n  ], function(err) {\n    if (err) return next(err);\n  });\n}\n\n// Forgot password route\nexport function forgot(req, res, next) {\n  async.waterfall([\n    function(done) {\n      crypto.randomBytes(20, function(err, buf) {\n        var token = buf.toString('hex');\n        done(err, token);\n      });\n    },\n    function(token, done) {\n      User.findOne({ email: req.body.email })\n      .then(user => {\n        if (!user) {\n          return res.status(422).json({'message': 'No account with that email address exists.'});\n        }\n        user.resetPasswordToken = token;\n        user.resetPasswordExpires = Date.now() + 3600000; // 1 hour\n\n        user.save(function(err) {\n          done(err, token, user);\n        });\n      });\n    },\n    function(token, user, done) {\n      // req.body.headers =  req.headers\n      req.body.to = user.email\n      req.body.host = req.headers.host\n      req.body.token =  token\n      mailer.send(config.mailOptions.forgotPassword(req.body))\n      return res.status(201).json({'message': 'An e-mail has been sent to ' + user.email + ' with further instructions.'});\n    }\n  ], function(err) {\n    if (err) return next(err);\n  });\n}\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexport function index(req, res) {\n  return User.find({}, '-salt -password').exec()\n    .then(users => {\n      res.status(200).json(users);\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res) {\n  console.log(req.body);\n  var newUser = new User(req.body);\n  newUser.provider = 'local';\n  if(req.body.role)\n   newUser.role = 'manager';\n  newUser.save()\n    .then(function(user) {\n    /**\n     * Creates send welcome  email\n     */\n      if(user.role === 'user'){\n       mailer.send(config.mailOptions.signUpAdvertiser(res.req.body));\n    }else if(user.role ==='manager'){\n       mailer.send(config.mailOptions.signUpPublisher(res.req.body));\n     }else{\n      mailer.send(config.mailOptions.signUpAdvertiser(res.req.body));\n     }\n      var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n      });\n      res.json({ token });\n    })\n    .catch(validationError(res));\n}\n\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n  var userId = req.params.id;\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(!user) {\n        return res.status(404).end();\n      }\n      res.json(user.profile);\n    })\n    .catch(err => next(err));\n}\n\n// Updates an existing Thing in the DB\nexport function update(req, res) {\n  if (req.body._id) \n    delete req.body._id;\n\n  return User.findById(req.params.id).exec()\n    // .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res))\n    \n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n  return User.findByIdAndRemove(req.params.id).exec()\n    .then(function() {\n      res.status(204).end();\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res) {\n  var userId = req.user._id;\n  var oldPass = String(req.body.oldPassword);\n  var newPass = String(req.body.newPassword);\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(user.authenticate(oldPass)) {\n        user.password = newPass;\n        return user.save()\n          .then(() => {\n            res.status(204).end();\n          })\n          .catch(validationError(res));\n      } else {\n        return res.status(403).end();\n      }\n    });\n}\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  var userId = req.user._id;\n\n  return User.findOne({ _id: userId }, '-salt -password').exec()\n    .then(user => { // don't ever give out the password or salt\n      if(!user) {\n        return res.status(401).end();\n      }\n      res.json(user);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Authentication callback\n */\nexport function authCallback(req, res) {\n  res.redirect('/');\n}\n"]}