{"version":3,"sources":["api/wishlist/wishlist.controller.js"],"names":["index","my","show","createOrRemove","create","update","destroy","config","isJson","str","JSON","parse","e","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","merge","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","err","send","req","find","email","user","exec","catch","q","query","where","findById","params","id","body","r","length","_id","uid","name"],"mappings":"AAAA;;;;;;;;;;AAUA;;;;;QAgEgBA,K,GAAAA,K;QAOAC,E,GAAAA,E;QAYAC,I,GAAAA,I;QAQAC,c,GAAAA,c;QAcAC,M,GAAAA,M;QAUAC,M,GAAAA,M;QAYAC,O,GAAAA,O;;AA7HhB;;;;AACA;;;;AACA;;IAAYC,M;;;;;;AAEZ,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,MAAI;AACAA,UAAMC,KAAKC,KAAL,CAAWF,GAAX,CAAN;AACH,GAFD,CAEE,OAAOG,CAAP,EAAU;AACRH,UAAMA,GAAN;AACH;AACD,SAAOA,GAAP;AACD;;AAED,SAASI,iBAAT,CAA2BC,GAA3B,EAAgCC,UAAhC,EAA4C;AAC1CA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASC,MAAT,EAAiB;AACtB,QAAGA,MAAH,EAAW;AACT,aAAOF,IAAIG,MAAJ,CAAWF,UAAX,EAAuBG,IAAvB,CAA4BF,MAA5B,CAAP;AACD;AACD,WAAO,IAAP;AACD,GALD;AAMD;;AAED,SAASG,WAAT,CAAqBC,OAArB,EAA8B;AAC5B,SAAO,UAASJ,MAAT,EAAiB;AACtB,QAAIK,UAAU,iBAAEC,KAAF,CAAQN,MAAR,EAAgBI,OAAhB,CAAd;AACA,WAAOC,QAAQE,IAAR,GACJC,IADI,CACC,mBAAW;AACf,aAAOH,OAAP;AACD,KAHI,CAAP;AAID,GAND;AAOD;;AAED,SAASI,YAAT,CAAsBX,GAAtB,EAA2B;AACzB,SAAO,UAASE,MAAT,EAAiB;AACtB,QAAGA,MAAH,EAAW;AACT,aAAOA,OAAOU,MAAP,GACJF,IADI,CACC,YAAM;AACVV,YAAIG,MAAJ,CAAW,GAAX,EAAgBU,GAAhB;AACD,OAHI,CAAP;AAID;AACF,GAPD;AAQD;;AAED,SAASC,oBAAT,CAA8Bd,GAA9B,EAAmC;AACjC,SAAO,UAASE,MAAT,EAAiB;AACtB,QAAG,CAACA,MAAJ,EAAY;AACVF,UAAIG,MAAJ,CAAW,GAAX,EAAgBU,GAAhB;AACA,aAAO,IAAP;AACD;AACD,WAAOX,MAAP;AACD,GAND;AAOD;;AAED,SAASa,WAAT,CAAqBf,GAArB,EAA0BC,UAA1B,EAAsC;AACpCA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASe,GAAT,EAAc;AACnBhB,QAAIG,MAAJ,CAAWF,UAAX,EAAuBgB,IAAvB,CAA4BD,GAA5B;AACD,GAFD;AAGD;;AAED;AACO,SAAS9B,KAAT,CAAegC,GAAf,EAAoBlB,GAApB,EAAyB;AAC9B,SAAO,mBAASmB,IAAT,CAAc,EAACC,OAAMF,IAAIG,IAAJ,CAASD,KAAhB,EAAd,EAAsCE,IAAtC,GACJZ,IADI,CACCX,kBAAkBC,GAAlB,CADD,EAEJuB,KAFI,CAEER,YAAYf,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAASb,EAAT,CAAY+B,GAAZ,EAAiBlB,GAAjB,EAAsB;AAC3B,MAAIwB,IAAI,EAAC,gBAAgB,0BAAjB,EAAR,CAD2B,CAC0B;AACrD,MAAGN,IAAIG,IAAP,EAAa;AACXG,QAAI9B,OAAOwB,IAAIO,KAAJ,CAAUC,KAAjB,CAAJ;AACAF,MAAEJ,KAAF,GAAUF,IAAIG,IAAJ,CAASD,KAAnB;AACD;AACD,SAAO,mBAASD,IAAT,CAAcK,CAAd,EAAiBF,IAAjB,GACJZ,IADI,CACCX,kBAAkBC,GAAlB,CADD,EAEJuB,KAFI,CAEER,YAAYf,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAASZ,IAAT,CAAc8B,GAAd,EAAmBlB,GAAnB,EAAwB;AAC7B,SAAO,mBAAS2B,QAAT,CAAkBT,IAAIU,MAAJ,CAAWC,EAA7B,EAAiCP,IAAjC,GACJZ,IADI,CACCI,qBAAqBd,GAArB,CADD,EAEJU,IAFI,CAECX,kBAAkBC,GAAlB,CAFD,EAGJuB,KAHI,CAGER,YAAYf,GAAZ,CAHF,CAAP;AAID;;AAED;AACO,SAASX,cAAT,CAAwB6B,GAAxB,EAA6BlB,GAA7B,EAAkC;AACvC,MAAIwB,IAAI9B,OAAOwB,IAAIY,IAAX,CAAR;AACAN,IAAEJ,KAAF,GAAUF,IAAIG,IAAJ,CAASD,KAAnB;AACA,qBAASD,IAAT,CAAcK,CAAd,EAAiBd,IAAjB,CAAsB,UAASqB,CAAT,EAAW;AAC/B,QAAGA,EAAEC,MAAF,GAAS,CAAZ,EAAe;AACbd,UAAIU,MAAJ,CAAWC,EAAX,GAAgBE,EAAE,CAAF,EAAKE,GAArB;AACAzC,cAAQ0B,GAAR,EAAYlB,GAAZ;AACD,KAHD,MAGK;AACHV,aAAO4B,GAAP,EAAWlB,GAAX;AACD;AACF,GAPD;AAQD;;AAED;AACO,SAASV,MAAT,CAAgB4B,GAAhB,EAAqBlB,GAArB,EAA0B;AAC/BkB,MAAIY,IAAJ,CAASI,GAAT,GAAehB,IAAIG,IAAJ,CAASY,GAAxB;AACAf,MAAIY,IAAJ,CAASV,KAAT,GAAiBF,IAAIG,IAAJ,CAASD,KAA1B;AACAF,MAAIY,IAAJ,CAASK,IAAT,GAAgBjB,IAAIG,IAAJ,CAASc,IAAzB;AACA,SAAO,mBAAS7C,MAAT,CAAgB4B,IAAIY,IAApB,EACJpB,IADI,CACCX,kBAAkBC,GAAlB,EAAuB,GAAvB,CADD,EAEJuB,KAFI,CAEER,YAAYf,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAAST,MAAT,CAAgB2B,GAAhB,EAAqBlB,GAArB,EAA0B;AAC/B,MAAGkB,IAAIY,IAAJ,CAASG,GAAZ,EAAiB;AAAE,WAAOf,IAAIY,IAAJ,CAASG,GAAhB;AAAsB;AACzCf,MAAIY,IAAJ,CAASI,GAAT,GAAehB,IAAIG,IAAJ,CAASD,KAAxB,CAF+B,CAEA;;AAE/B,SAAO,mBAASO,QAAT,CAAkBT,IAAIU,MAAJ,CAAWC,EAA7B,EAAiCP,IAAjC,GACJZ,IADI,CACCI,qBAAqBd,GAArB,CADD,EAEJU,IAFI,CAECL,YAAYa,IAAIY,IAAhB,CAFD,EAGJpB,IAHI,CAGCX,kBAAkBC,GAAlB,CAHD,EAIJuB,KAJI,CAIER,YAAYf,GAAZ,CAJF,CAAP;AAKD;;AAED;AACO,SAASR,OAAT,CAAiB0B,GAAjB,EAAsBlB,GAAtB,EAA2B;AAChC,SAAO,mBAAS2B,QAAT,CAAkBT,IAAIU,MAAJ,CAAWC,EAA7B,EAAiCP,IAAjC,GACJZ,IADI,CACCI,qBAAqBd,GAArB,CADD,EAEJU,IAFI,CAECC,aAAaX,GAAb,CAFD,EAGJuB,KAHI,CAGER,YAAYf,GAAZ,CAHF,CAAP;AAID","file":"wishlist.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/wishlists              ->  index\n * POST    /api/wishlists              ->  create\n * GET     /api/wishlists/:id          ->  show\n * PUT     /api/wishlists/:id          ->  upsert\n * PATCH   /api/wishlists/:id          ->  patch\n * DELETE  /api/wishlists/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Wishlist from './wishlist.model';\nimport * as config from '../../config/environment/shared'\n\nfunction isJson(str) {\n  try {\n      str = JSON.parse(str);\n  } catch (e) {\n      str = str;\n  }\n  return str\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Wishlists\nexport function index(req, res) {\n  return Wishlist.find({email:req.user.email}).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a list of Wishlists\nexport function my(req, res) {\n  var q = {'product.name': '~!!@~!~*&^%$#!@@!#asds12'} // Some randome string so that blank value will be returned\n  if(req.user) {\n    q = isJson(req.query.where)\n    q.email = req.user.email\n  }\n  return Wishlist.find(q).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Wishlist from the DB\nexport function show(req, res) {\n  return Wishlist.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Wishlist in the DB\nexport function createOrRemove(req, res) {\n  var q = isJson(req.body)\n  q.email = req.user.email\n  Wishlist.find(q).then(function(r){\n    if(r.length>0) {\n      req.params.id = r[0]._id\n      destroy(req,res)\n    }else{\n      create(req,res)\n    }\n  })\n}\n\n// Creates a new Wishlist in the DB\nexport function create(req, res) {\n  req.body.uid = req.user._id;\n  req.body.email = req.user.email;\n  req.body.name = req.user.name;\n  return Wishlist.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Brand in the DB\nexport function update(req, res) {\n  if(req.body._id) { delete req.body._id; }\n  req.body.uid = req.user.email; // id change on every login hence email is used\n\n  return Wishlist.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Wishlist from the DB\nexport function destroy(req, res) {\n  return Wishlist.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}