{"version":3,"sources":["api/brandmg/brandmg.controller.js"],"names":["index","show","create","update","destroy","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","merge","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","err","send","req","find","query","catch","brandMG","findById","params","id","exec","body","uid","user","email","Date","now","slug","info","toString","toLowerCase","replace","_id"],"mappings":"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","file":"brandmg.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/brandmgs              ->  index\n * POST    /api/brandmgs              ->  create\n * GET     /api/brandmgs/:id          ->  show\n * PUT     /api/brandmgs/:id          ->  update\n * DELETE  /api/brandmgs/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport BrandMG from './brandmg.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Brands\nexport function index(req, res) {\n  BrandMG.find(req.query)\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single BrandMG from the DB\nexport function show(req, res) {\n  return brandMG.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Brand in the DB\nexport function create(req, res) {\n  req.body.uid = req.user.email; // id change on every login hence email is used\n  req.body.updated = Date.now();\n  if(!req.body.slug && req.body.info)\n  req.body.slug = req.body.info.toString().toLowerCase()\n                      .replace(/\\s+/g, '-')        // Replace spaces with -\n                      .replace(/[^\\w\\-]+/g, '')   // Remove all non-word chars\n                      .replace(/\\-\\-+/g, '-')      // Replace multiple - with single -\n                      .replace(/^-+/, '')          // Trim - from start of text\n                      .replace(/-+$/, '');\n\n  return BrandMG.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing brandMG in the DB\nexport function update(req, res) {\n  if(req.body._id) { delete req.body._id; }\n  req.body.uid = req.user.email; // id change on every login hence email is used\n  req.body.updated = Date.now();\n  if(!req.body.slug && req.body.info)\n  req.body.slug = req.body.info.toString().toLowerCase()\n                      .replace(/\\s+/g, '-')        // Replace spaces with -\n                      .replace(/[^\\w\\-]+/g, '')   // Remove all non-word chars\n                      .replace(/\\-\\-+/g, '-')      // Replace multiple - with single -\n                      .replace(/^-+/, '')          // Trim - from start of text\n                      .replace(/-+$/, '');\n\n  return brandMG.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a BrandMG from the DB\nexport function destroy(req, res) {\n  return BrandMG.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}