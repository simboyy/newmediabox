{"version":3,"sources":["api/address/address.controller.js"],"names":["index","my","show","create","update","destroy","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","extend","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","err","send","req","find","exec","catch","uid","user","_id","sort","findById","params","id","body"],"mappings":"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","file":"address.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/address              ->  index\n * POST    /api/address              ->  create\n * GET     /api/address/:id          ->  show\n * PUT     /api/address/:id          ->  update\n * DELETE  /api/address/:id          ->  destroy\n */\n\n'use strict';\nimport _ from 'lodash';\nimport Address from './address.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.extend(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Addresss\nexport function index(req, res) {\n  return Address.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a list of Addresss\nexport function my(req, res) {\n  Address.find({uid:req.user._id}).sort('-updatedAt').exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Address from the DB\nexport function show(req, res) {\n  return Address.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Address in the DB\nexport function create(req, res) {\n  req.body.uid = req.user._id;\n  return Address.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Address in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Address.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Address from the DB\nexport function destroy(req, res) {\n  return Address.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}